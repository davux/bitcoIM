#! /usr/bin/python
# -*- coding: utf-8 -*-
# vi: sts=4 et sw=4

import sys
from bitcoim.db import SQL, Database
from bitcoin.controller import Controller
from ConfigParser import NoSectionError, NoOptionError
from conf import Config
from logging import basicConfig, error, DEBUG, INFO, WARNING, ERROR, CRITICAL

try:
    from xmpp import client, protocol
except ImportError:
    error("Error: this program needs the Python XMPP library.")
    sys.exit(1)
from bitcoim.component import Component

reload(sys)
sys.setdefaultencoding('utf8')

config = Config()

loglevels = {'debug': DEBUG, 'info': INFO, 'warning': WARNING, \
             'error': ERROR, 'critical': CRITICAL}
try:
    loglevel = loglevels[config.get('main program', 'loglevel', 'info')]
except IndexError:
    loglevel = INFO
basicConfig(level=loglevel)

try:
    dbfile = config.get('database', 'file')
except NoSectionError:
    error("No [database] section found")
    sys.exit(1)
except NoOptionError:
    error("No 'file' option found in section [database]")
    sys.exit(1)
SQL(url=dbfile)
database = Database(dbfile)
database.upgrade(1)

try:
    bitcoinUser = config.get('bitcoin', 'user')
    bitcoinPass = config.get('bitcoin', 'password')
except NoSectionError:
    error("No [bitcoin] section found")
    sys.exit(1)
except NoOptionError:
    error("No user and/or password in section [bitcoin]")
    sys.exit(1)

try:
    Controller(bitcoinUser, bitcoinPass).getinfo()
except IOError:
    error("Communication error with bitcoin client")
    sys.exit(1)
try:
    componentJid = config.get('XMPP', 'jid')
    componentPass = config.get('XMPP', 'password')
    componentServer = config.get('XMPP', 'server')
    componentPort = config.get('XMPP', 'port', 5269)
except NoSectionError:
    error("No [XMPP] section found")
    sys.exit(1)
except NoOptionError:
    error("No connection information found in [XMPP] section")
    sys.exit(1)
try:
    bitcoIM = Component(componentJid, componentPass,componentServer, componentPort)
except Exception, message:
    error("Error while connecting to server: %s" % (message))
    sys.exit(1)
try:
    bitcoIM.loop(10)
except KeyboardInterrupt:
    bitcoIM.sayGoodbye()
